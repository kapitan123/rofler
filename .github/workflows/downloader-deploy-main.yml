name: Downloader deploy main

on:
  push:
    branches:
      - main
    paths:
      - "service/downloader/**"
      #AK TODO temp solution
  workflow_dispatch:
    inputs:
      env:
        description: Environment
        default: prod
        required: true

jobs:
  golang-lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: '1.19'
          
      - uses: actions/checkout@v3
      - name: downloader golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.29
          working-directory: service/downloader/**

  deploy-cloudrun-service:
    runs-on: ubuntu-latest
    environment: prod
    name: Deploys new version of downloader
    concurrency:
      group: downloader-deploy-main-${{ github.ref }}
      cancel-in-progress: true

    # GCP_CREDENTIALS hack is by design, otherwise env secrets are not available
    # secrets MUST be used from env. and not form secrets.
    # https://github.com/orgs/community/discussions/25238#discussioncomment-3247035
    env:
      GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}

    steps:
      - uses: actions/checkout@v3

      - id: auth
        name: Authenticate to Google Cloud
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: ${{ env.GCP_CREDENTIALS }}

      - id: service-meta
        name: Calculate service deployment settings
        run: |
          echo "image=eu.gcr.io/${{ steps.auth.outputs.project_id }}/downloader" >> $GITHUB_OUTPUT
          echo "name=downloader" >> $GITHUB_OUTPUT

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Configure Docker
        shell: bash
        run: gcloud auth configure-docker --quiet

      - name: Build Docker image
        shell: bash
        run: docker build -f service/downloader/Dockerfile . -t ${{ steps.service-meta.outputs.image }}

      - name: Push Docker image
        shell: bash
        run: docker push ${{ steps.service-meta.outputs.image }}

      - id: deploy
        name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: downloader
          image: ${{ steps.service-meta.outputs.image }}
          region: europe-central2
          env_vars: |
            PROJECT_ID=${{ steps.auth.outputs.project_id}}
          flags: --allow-unauthenticated

      - name: Output deployed url
        run: echo "URL of a new service is ${{ steps.deploy.outputs.url }}"
