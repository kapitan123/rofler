name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]
  pull_request:
     types: [ opened, edited, synchronize ]

env:
  IMAGE_NAME: ""
  CLOUD_RUN_SERVICE_NAME: ""

# AK TODO extract env setup 
# can extract env-setup-action
# wich outputs a token and app name pr trigger

jobs:
    deploy-cloudrun-service:
      runs-on: ubuntu-latest
      environment: prod
      name: Deploys new version of telegrofler bot

      steps:
      - name : Print Title of PR
        run: echo The Title of your PR is ${{ github.event.pull_request.title }}

      - uses: 'actions/checkout@v3'

      - id: auth
        name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - id: secrets-manager
        uses: google-github-actions/get-secretmanager-secrets@v0
        with:
          secrets: |-
            telegram-bot-token:${{ steps.auth.outputs.project_id }}/telegram_bot_token
            app-name:${{ steps.auth.outputs.project_id }}/app_name
    
      - id: concat-image-name
        name: Create image name with values from secrets secrets-manager
        run: |
          echo "IMAGE_NAME=eu.gcr.io/${{ steps.auth.outputs.project_id }}/${{ steps.secrets-manager.outputs.app-name }}" >> $GITHUB_ENV
          echo "CLOUD_RUN_SERVICE_NAME=${{ steps.secrets-manager.outputs.app-name }}-${{github.ref_name}}" >> $GITHUB_ENV

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Configure Docker
        shell: bash
        run: gcloud auth configure-docker --quiet

      - name: Build Docker image
        shell: bash
        run: docker build . -t ${{ env.IMAGE_NAME }}

      - name: Push Docker image
        shell: bash
        run: docker push ${{ env.IMAGE_NAME }}
      # - id: build-and-push
      #   uses: ./.github/actions/gcp-build-and-push-image
      #   with:
      #     image-name: ${{ env.IMAGE_NAME }}
      #     credentials-json: ${{ secrets.GCP_CREDENTIALS }}

      # - name: Set cloudrun service name to branch name
      #   run:
      #     echo "CLOUD_RUN_SERVICE_NAME=${{ steps.secrets-manager.outputs.app-name }}-${{github.ref_name}}" >> $GITHUB_ENV

      - id: deploy
        name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.CLOUD_RUN_SERVICE_NAME }}
          image:  ${{ env.IMAGE_NAME }}
          region: europe-central2
          env_vars: |
            TELEGRAM_BOT_TOKEN=${{ steps.secrets-manager.outputs.telegram-bot-token }}
            PROJECT_ID=${{ steps.auth.outputs.project_id}}
            DELETION_QUEUE_NAME=tg-message-deletion

      - name: Output deployed url
        run: curl "${{ steps.deploy.outputs.url }}"