name: Deploy Convertorto CloudRun reusable workflow

on:
  push:
    branches:
      - main
    paths:
      - "bot/**"

jobs:
    deploy-cloudrun-service:
      runs-on: ubuntu-latest
      environment: prod
      name: Deploys new version of convertor
      concurrency:
        group: cloudrun-deploy-${{ github.ref }}
        cancel-in-progress: true

      # GCP_CREDENTIALS hack is by design, otherwise env secrets are not available
      # secrets MUST be used from env. and not form secrets.
      # https://github.com/orgs/community/discussions/25238#discussioncomment-3247035
      env:
        GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}

      steps:         
      - uses: 'actions/checkout@v3'
          
      - id: auth
        name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ env.GCP_CREDENTIALS }}
 
      # AK TODO check if I need to set meta for convertor
      - id: service-meta
        name: Calculate service deployment settings
        run: |
          echo "image=eu.gcr.io/${{ steps.auth.outputs.project_id }}/${{ steps.secrets-manager.outputs.app-name }}" >> $GITHUB_OUTPUT
          echo "name=convertor" >> $GITHUB_OUTPUT

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Configure Docker
        shell: bash
        run: gcloud auth configure-docker --quiet

      - name: Build Docker image
        shell: bash
        run: docker build -f convertor/Dockerfile . -t ${{ steps.service-meta.outputs.image }}

      - name: Push Docker image
        shell: bash
        run: docker push ${{ steps.service-meta.outputs.image }}

      - id: deploy
        name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ steps.service-meta.outputs.name }}
          image:  ${{ steps.service-meta.outputs.image }}
          region: europe-central2
          env_vars: | 
            PROJECT_ID=${{ steps.auth.outputs.project_id}}
            DELETION_QUEUE_NAME=tgmessage-deletion
          flags: --allow-unauthenticated

      - name: Output deployed url
        run: echo "URL of a new service is ${{ steps.deploy.outputs.url }}"
      
      - name: Set feature bot callback
        if: ${{ inputs.set-webhook }} == true
        uses: ./.github/actions/set-bot-callback
        with:
          bot-token: ${{ steps.service-meta.outputs.bot-token }}
          callback-url: ${{ steps.deploy.outputs.url }}